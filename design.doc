This is the design document for CSCE 315.
8/30/2013
Authors:
Patrick Rock
Juaune Burgess
Ben Creighton

Section 1 Purpose:
This project is a tool to help maximize procrastination. The goal is to schedule activities during freetime which would 
otherwise be wasted by the user. The activities are selected randomly by the application to fill unused time. The system
will use a super-uuber simplistic database to manage the different users and the activities that they are involved in.


Sectction 2 High Level Entities:

App:
  the app user interface

Database Engine:
  The module does the actual manipulation of the database file based on the instructions recieved from the parser. It consists of a single class object.

Lexer
  This module tokenizes a string of SQL commands from the user application into tokens that can be used by the parser.

Parser
  This module checks the simplistic SQL syntax of the token stream and then calls the Database Engine functions to exectue
  the commands.

Data Model
  ...
  
Section 3 Low Level Design:

App design:

Engine design:
  Class DB_Engine
    Members:
      Open_Files - a vector containing all of the file descriptors opened by the database engine.
    Functions:
      Open(String file_location) - Opens a database file at a given location
      Close(int fd) - Takes a file descriptor and closes the database file
      Write(string relation_name) - Creates a new relation database file
      Show(string relation_name) - Returns a string showing a given relation or view
      Create(string table_name, void* args) - Creates a blank table or entity schema
      Update(string table_name, int row, column) - Updates a given column in an entity 
      Insert(string table_name, void* args) - Inserts a new entity into a table
      Delete(string relation_name) - Deletes an entire relation
      Delete(string relation_name, string tuple) - Deletes a tuple from a relation
      Select(string relation_name, void* args) - Returns a string containing the elements of the relation desired
      Project(string relation_name, string attributes) - Returns the projection of a relation over a set of attributes
      Rename(string relation_name) - Renames a relation or entity set
      Operator+(string relation_name1, string relation_name2) - Returns the union of two relations
      Operator-(string relation_name1, string relation_name2) - Returns the difference between two relations
      Operator*(string relation_name1, string relation_name2) - Returns the cartesian product of two relations

Lexer:

Parser:

Data Model:

Section 4 Benefits, assumptions, risks/issues:

Benefits:
The database is very simple. It should be easy to build and maintain.

Assumptions:
Assuming that the simplistic database will be robust enough to meet the needs of our application.
We are assuming that we will be able to invent activities for our procrastination app.
...

Risks:
The data is stored in plaintext. This makes the dabase insecure and vunerable to attack.
